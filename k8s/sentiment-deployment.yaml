# Kubernetes Deployment for Sentiment Analyzer Pro
apiVersion: v1
kind: Namespace
metadata:
  name: sentiment-analyzer
  labels:
    name: sentiment-analyzer

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sentiment-config
  namespace: sentiment-analyzer
data:
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"
  REDIS_URL: "redis://redis-service:6379"
  POSTGRES_URL: "postgresql://sentiment_user:sentiment_secure_password_2024@postgres-service:5432/sentiment_analyzer"
  ENABLE_REDIS_CACHE: "true"
  L1_CACHE_SIZE: "2000"
  L2_CACHE_TTL: "7200"
  TASK_PROCESSOR_WORKERS: "8"
  TRANSFORMERS_ENABLED: "true"
  VADER_ENABLED: "true"
  TEXTBLOB_ENABLED: "true"
  TIMEOUT_SECONDS: "60"
  MAX_RETRIES: "3"

---
apiVersion: v1
kind: Secret
metadata:
  name: sentiment-secrets
  namespace: sentiment-analyzer
type: Opaque
stringData:
  postgres-password: "sentiment_secure_password_2024"
  redis-password: ""
  openai-api-key: ""
  anthropic-api-key: ""

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sentiment-models-pvc
  namespace: sentiment-analyzer
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: nfs-client

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sentiment-logs-pvc
  namespace: sentiment-analyzer
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: nfs-client

---
# Sentiment Analyzer API Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sentiment-api
  namespace: sentiment-analyzer
  labels:
    app: sentiment-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: sentiment-api
  template:
    metadata:
      labels:
        app: sentiment-api
    spec:
      containers:
      - name: sentiment-api
        image: sentiment-analyzer:latest
        ports:
        - containerPort: 8000
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sentiment-secrets
              key: postgres-password
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: sentiment-secrets
              key: openai-api-key
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: sentiment-secrets
              key: anthropic-api-key
        envFrom:
        - configMapRef:
            name: sentiment-config
        volumeMounts:
        - name: models-storage
          mountPath: /app/models
        - name: logs-storage
          mountPath: /var/log/sentiment-analyzer
        resources:
          requests:
            memory: "2Gi"
            cpu: "1"
          limits:
            memory: "4Gi"
            cpu: "2"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
      volumes:
      - name: models-storage
        persistentVolumeClaim:
          claimName: sentiment-models-pvc
      - name: logs-storage
        persistentVolumeClaim:
          claimName: sentiment-logs-pvc

---
# Sentiment Worker Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sentiment-worker
  namespace: sentiment-analyzer
  labels:
    app: sentiment-worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sentiment-worker
  template:
    metadata:
      labels:
        app: sentiment-worker
    spec:
      containers:
      - name: sentiment-worker
        image: sentiment-analyzer:worker
        env:
        - name: WORKER_MODE
          value: "true"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sentiment-secrets
              key: postgres-password
        envFrom:
        - configMapRef:
            name: sentiment-config
        volumeMounts:
        - name: models-storage
          mountPath: /app/models
        - name: logs-storage
          mountPath: /var/log/sentiment-analyzer
        resources:
          requests:
            memory: "1Gi"
            cpu: "0.5"
          limits:
            memory: "2Gi"
            cpu: "1"
      volumes:
      - name: models-storage
        persistentVolumeClaim:
          claimName: sentiment-models-pvc
      - name: logs-storage
        persistentVolumeClaim:
          claimName: sentiment-logs-pvc

---
# API Service
apiVersion: v1
kind: Service
metadata:
  name: sentiment-api-service
  namespace: sentiment-analyzer
  labels:
    app: sentiment-api
spec:
  selector:
    app: sentiment-api
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
  type: ClusterIP

---
# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: sentiment-analyzer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          timeoutSeconds: 1

---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: sentiment-analyzer
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
  type: ClusterIP

---
# PostgreSQL StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: sentiment-analyzer
spec:
  serviceName: postgres-service
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: sentiment_analyzer
        - name: POSTGRES_USER
          value: sentiment_user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sentiment-secrets
              key: postgres-password
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - sentiment_user
            - -d
            - sentiment_analyzer
          initialDelaySeconds: 60
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - sentiment_user
            - -d
            - sentiment_analyzer
          initialDelaySeconds: 30
          timeoutSeconds: 3
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 20Gi

---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: sentiment-analyzer
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP

---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sentiment-ingress
  namespace: sentiment-analyzer
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - sentiment-api.yourdomain.com
    secretName: sentiment-tls
  rules:
  - host: sentiment-api.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sentiment-api-service
            port:
              number: 80

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sentiment-api-hpa
  namespace: sentiment-analyzer
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sentiment-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
# Network Policy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: sentiment-network-policy
  namespace: sentiment-analyzer
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
  - from:
    - podSelector:
        matchLabels:
          app: sentiment-api
    - podSelector:
        matchLabels:
          app: sentiment-worker
    ports:
    - protocol: TCP
      port: 6379
    - protocol: TCP
      port: 5432
  egress:
  - {} # Allow all outbound traffic